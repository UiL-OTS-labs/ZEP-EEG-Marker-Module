#!/usr/bin/zep-2.0

import zep_markers;

start() {
    // To test if the BeexyBox X and Beexybox B can work together uncomment
    // the next line
    //open_secondary_beexybox();

    println("#### Running some tests ####");

    time tref = now();

    println("...");
    println("Setting up marker 2 on to be sent on 2s from now");
    setup_marker_at(2, tref+2s);

    println("...");
    println("Setting up marker 4 on 4s");
    setup_marker_at(4, tref+4s);

    println("...");
    println("Setting up marker 3 on 3s");
    setup_marker_at(3, tref+3s);

    println("...");
    println("Setting up a conflicting marker 5 on 4s (should conflict with marker 4 on 4s)");
    setup_marker_at(5, tref+4s);

    println("...");
    println("Setting up a conflicting marker 5 on 4.010s (should conflict with marker 4 on 4s)");
    setup_marker_at(5, tref+4010ms);

    println("...");
    println("Setting up a NON conflicting marker 5 on 4.050s");
    setup_marker_at(5, tref+4050ms);

    println("...");
    println("Setting up marker 1 on 1s");
    setup_marker_at(1, tref+1s);

    println("...");
    println("Firing 'nearly' direct marker 9");
    send_marker(9);

    scheduler.dump_schedule();

    // If Zep or the CPU is very (very) busy at the time of scheduling
    // the scheduler might not get enough cycles to do its job correctly
    // and in a timely matter
    // Uncomment the next line to test scheduler overloading
    //overload_scheduler(tref+5s);

    println("Loading and scheduling markers has finished. Press Ctrl + 'c' when actual marking has finished or to abort.");
}

void overload_scheduler(time tref)
{
    int number_of_markers = 1000;
    println("Setting up a "+ number_of_markers + " additional markers at 100ms intervals");
    time tic = now();
    int index = 0;
    while(index < number_of_markers)
    {
        setup_marker_at(6, tref + 4s + (index*100ms) );
        index++;
    }
    time tock = now();
    println("Finished at " + tock + ". Adding these " + number_of_markers + " took " + string(tock-tic) + ".");
    println("During this time the scheduler was overloaded causing it to fail scheduling or pre-empting markers in a timely fashion.");
}
